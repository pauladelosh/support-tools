############################################################################################
# Module security updates
# based on Georg Cassie's script for updating modules, modified by MGM for additional variables.
#
# Instructions:
# 1.  cd to folder where the module lives.
# 2.  pick your function name (message varies a bit for each): [git/svn]-mupdate[-sec/add/blank]
# 3.  Enter variables, in this order: module current-version new-version ticket#
# 4.  Example: git-mupdate-sec ctools 7.x-2.1 7.x-2.3 15066-333333
#
# Remember: CHANGE 'MGM' to your initials!
############################################################################################
# SVN Module Security Update
function svn-mupdate-sec {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi

if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
svn rm "$1"
svn commit -m "MGM@acquia, $4: Module Security Update, cleanup, removing $1-$2 module"
curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
svn add --force "$1"
svn commit -m "MGM@acquia, $4: Module Security Update $1-$3 from $2."
}

# SVN Module Update
function svn-mupdate {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi

if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
svn rm "$1"
svn commit -m "MGM@acquia, $4: Module Update, cleanup, removing $1-$2 module."
curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
svn add --force "$1"
svn commit -m "MGM@acquia, $4: Module Update $1-$3 from $2, bug-fix release."
}

# SVN Add a New Module
function svn-mupdate-add {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi

if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi

curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
svn add --force "$1"
svn commit -m "MGM@acquia, $4: Module Install, adding $1-$3."
}
# SVN Revert a Module
function svn-mupdate-rev {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi

if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi

curl "http://ftp.drupal.org/files/projects/$1-$2.tar.gz" | tar xz
svn add --force "$1"
svn commit -m "MGM@acquia, $4: Module Reversion back to $1-$2."
}

# GIT Module Security Update
function git-mupdate-sec {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi
if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
git rm -rf "$1"
curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
git add "$1"
git commit -am "MGM@acquia, $4: Security Update $1-$3 from $2."
}

# GIT Module Update
function git-mupdate {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi
if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
git rm -rf "$1"
curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
git add "$1"
git commit -am "MGM@acquia, $4: Module Update $1-$3, bug-fix release."
}

# GIT Add a New Module
function git-mupdate-add {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi
if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
git rm -rf "$1"
curl "http://ftp.drupal.org/files/projects/$1-$3.tar.gz" | tar xz
git add "$1"
git commit -am "MGM@acquia, $4: Module Update, adding $1-$3"
}
# GIT Revert a Module
function git-mupdate-rev {
if [ ! -n "$1+x" ]; then
  echo $1 is not set
  echo exiting
  exit 1
fi
if [ ! -n "$3+x" ]; then
  echo $3 is not set
  echo exiting
  exit 1
fi
git rm -rf "$1"
curl "http://ftp.drupal.org/files/projects/$1-$2.tar.gz" | tar xz
git add "$1"
git commit -am "MGM@acquia, $4: Module Reversion, back to $1-$2."
}
