# Add these lines to the bottom of .profile or .bash_profile, which conveniently leaves the alias s.a & s.b to re-source this file if needed.
#
# source ~/Support-Tools/ratools/alpha_alias
#


#
# Personal Fix these & (hopefully-alpha) we're good to go.
#
FIRSTNAME="Maria"
LASTNAME="McDowell"
RA_INITIALS="MGM"
#RATOOLSPATH="~/Support-Tools/ratools/alpha_alias"
###  END Personal 

#  VERSIONS: Put current versions here
CURVER6="6.36"
CURVER7="7.36"

#
# Other 
#
SVNNAME="acquia_ahsupport_$FIRSTNAME$LASTNAME"
ENV="prod"


# == ==  == ==  == ==  == ==  == ==  == ==  == == 
#
# Functions
# Only work if you set sitename!
# == ==  == ==  == ==  == ==  == ==  == ==  == ==

#
# modversion: display the version number of a module   use:  modver <module name>
#
function modver { 
if [ -z "$1" ]
  then echo "missing module name" && return
fi
  less $1/$1.info | grep version; 
}

# sitename: set the sitename const, set up handy aht alias using const & name the tab in iterm2   use:  sn <sitename>
function sn {
if [ -z "$1" ]
  then echo "missing client code, exiting" && return
fi
SITENAME="$1"
export PROMPT_COMMAND='echo -ne "\033]0;$SITENAME\007"'        # sets tab name in iTerm2
alias ahst="aht @$SITENAME.prod drush status"
alias ahsi="aht @$SITENAME.prod application:sites"
alias ahsup="aht @$SITENAME.prod drush upc --uri=default --pipe --security-only"
alias ahaup="aht @$SITENAME.prod drush --uri=default upc --pipe"
alias ahuli="aht @$SITENAME.prod application:login"
alias ahrepo="aht @$SITENAME.prod repo" 
}

# tab: name the tab in iterm2    for when you only want to set the tab name
function tab {
if [ -z "$1" ]
  then echo "missing tab name, exiting" && return
fi
TABNAME="$1"
export PROMPT_COMMAND='echo -ne "\033]0;$TABNAME\007"'
}

# find module: Finds the folders where modules live
# *#*#*#*#  Notice default raised to 1000(need to if-else this) ####################  In need of some TLC RegEx magic  *#*#*#*# 
function fmod {
if [ -z "$1" ]
  then echo "missing module name, exiting" && return
fi
if [ -z "$2" ]
  then FMODNUM=1000
  else FMODNUM="$2"
fi
find . -type d | grep -i "$1" | head -$FMODNUM  | less
}

############################   Show & Tell   #########################################
# vars: print the vars that are needed for smooth ops
#                                                             #########  needs help option, maybe other options   Work-in-progress
function vars {
echo "- ~ - ~    Welcome to RA~World   - ~ - ~"
echo "Set using  Variable Name  Value"
echo "---------  ------------   -------------------------------"
echo "{.profile} RA_INITIALS    "$RA_INITIALS 
echo "{.profile} FIRSTNAME      "$FIRSTNAME
echo "{.profile} LASTNAME       "$LASTNAME
echo "{.profile} SVNNAME        "$SVNNAME
echo "{.profile} SVNPW          "$SVNPW
                                
echo " "                        
echo "{.profile} TCKACQUIA      "$TCKACQUIA
echo "tck        TCKNUM         "$TCKNUM
echo "sn         SITENAME       "$SITENAME 
echo "env        ENV            "$ENV
echo " "                        
echo "gos        GOS            "$GOS
echo "cvf        CVF            "$CVF
echo "cvt        CVT            "$CVT
echo "vcs        VCSPATH        "$VCSPATH
echo " "                        
echo "bradte     BRANCHDATE     "$BRANCHDATE
echo "tagdte     TAGDATE        "$TAGDATE
echo "srcbra     SOURCEBRANCH   "$SOURCEBRANCH
echo "tgtbra     TARGETBRANCH   "$TARGETBRANCH
echo "mrgbra     MERGEBRANCH    "$MERGEBRANCH
echo "svnrev     SVNREV         "$SVNREV
echo " "                        
echo "###  AHT Alias  ###"
echo "ahst       aht @$SITENAME.prod drush --uri=default status"
echo "ahsi       aht @$SITENAME.prod application:sites"
echo "ahsup      aht @$SITENAME.prod drush upc --uri=default --pipe --security-only"
echo "ahaup      aht @$SITENAME.prod drush --uri=default upc --pipe"
echo "ahuli      aht @$SITENAME.prod application:login"
echo "ahrepo     aht @$SITENAME.prod repo" 
#echo "ahupdb     aht @$SITENAME.test drush --uri=default updb"   ####################################   need function with env

#echo "ahpmi      aht @$SITENAME.prod drush pmi <module>"    ##############
}

alias ahupdb="aht @$SITENAME.test drush --uri=default updb"  ##################################################  Remove this

###################################   Simple functions to set vars   ################################
#  Working to find easier way to get this info, but will need these to tweak
#

# VCS: store the path of the VCS 
function vcs {
if [ -z "$1" ]
  then echo "missing VCS path, exiting" && return
fi
VCSPATH="$1"
echo $VCSPATH
}

# ENV: store the environment for the workflow & aht commands
function env {
if [ -z "$1" ]
  then echo "missing environment name, i.e prod, stag, dev, qa, etc, exiting" && return
fi
ENV="$1"
echo $ENV
}

# TCK: store the Ticket number
function tck {
if [ -z "$1" ]
  then echo "missing ticket number, just the last 5-6 digits" && return
fi
TCKNUM="$1"
echo $TCKNUM
}

# CVF: store the Ticket number
function cvf {
if [ -z "$1" ]
  then echo "missing core version from" && return
fi
CVF="$1"
echo $CVF
}

# CVT: core version to
function cvt {
if [ -z "$1" ]
  then echo "missing core version to" && return
fi
CVT="$1"
echo $CVT
}

# GOS: Git or SVN
function gos {
if [ -z "$1" ]
  then echo "Git or SVN missing" && return
fi
GOS="$1"
echo $GOS
}

# VCSSRC: VCS source
function vcssrc {
if [ -z "$1" ]
  then echo "VCS Source missing" && return
fi
VCSSRC="$1"
echo $VCSSRC
}

# BRADTE: Branch Date
function bradte {
if [ -z "$1" ]
  then BRANCHDATE=$(date +"%Y-%m-%d")
  else BRANCHDATE="$1"
fi
echo $BRANCHDATE
}

# TAGDTE: desc
function tagdte {
if [ -z "$1" ]
  then TAGDATE=$(date +"%Y-%m-%d")
  else TAGDATE="$1"
fi

echo $TAGDATE
}

# SVNREV: SVN Revision number
function svnrev {
if [ -z "$1" ]
  then echo "Missing SVN rev" && return
fi
SVNREV="$1"
echo $SVNREV
}

# MRGBRA: desc
function mrgbra {
if [ -z "$1" ]
  then MERGEBRANCH="master"
  else MERGEBRANCH="$1"
fi
echo $MERGEBRANCH
}

# SRCBRA: Source branch
function srcbra {
if [ -z "$1" ]
  then SOURCEBRANCH="acqUp-$TCKNUM-$BRANCHDATE"
  else SOURCEBRANCH="$1"
fi

echo $SOURCEBRANCH
}

# TGTBRA: Target Branch
function tgtbra {
if [ -z "$1" ]
  then TARGETBRANCH="acqUpd-"$TCKNUM"-"$(date +"%Y%m%d")
  else TARGETBRANCH="$1"
fi
echo $TARGETBRANCH

}

# VAR: desc
function var {
if [ -z "$1" ]
  then echo "" && return
fi
VAR="$1"
echo $VAR
}


   























